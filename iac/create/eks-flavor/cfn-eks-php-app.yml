AWSTemplateFormatVersion: '2010-09-09'
Description: "CloudFormation template for PHP app on EKS with KEDA autoscaling and RDS MySQL"

Parameters:
  ApplicationName:
    Type: String
    Default: php-app
  ECRRepoName:
    Type: String
    Default: php-app-repo
  ImageTag:
    Type: String
    Default: latest
  DBName:
    Type: String
    Default: mydb
  DBUser:
    Type: String
    Default: admin
  DBPassword:
    Type: String
    NoEcho: true
  DBInstanceClass:
    Type: String
    Default: db.t3.micro
  DBAllocatedStorage:
    Type: Number
    Default: 20
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1Cidr:
    Type: String
    Default: 10.0.1.0/24
  PublicSubnet2Cidr:
    Type: String
    Default: 10.0.2.0/24

Resources:
  # VPC
  AppVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref AppVPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet1, PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: {}
  # (Subnets and route tables omitted for brevity)

  # RDS MySQL
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for DB
      SubnetIds: [!Ref PublicSubnet1, !Ref PublicSubnet2]
  MySQLDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: mysql
      EngineVersion: '8.0'
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      DBName: !Ref DBName
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      VPCSecurityGroups: [!GetAtt RDSSecurityGroup.GroupId]
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false

  # EKS Cluster
  EKSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: { Service: eks.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub "${ApplicationName}-cluster"
      RoleArn: !GetAtt EKSRole.Arn
      ResourcesVpcConfig:
        SubnetIds: [!Ref PublicSubnet1, !Ref PublicSubnet2]
        EndpointPublicAccess: true

  # NodeGroup
  NodeGroupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: { Service: ec2.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
  NodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Ref EKSCluster
      NodeRole: !GetAtt NodeGroupRole.Arn
      Subnets: [!Ref PublicSubnet1, !Ref PublicSubnet2]
      ScalingConfig:
        MinSize: 1
        MaxSize: 2
        DesiredSize: 1
      InstanceTypes: [t3.small]

  # KEDA HelmChart
  KedaHelm:
    Type: AWS::EKS::HelmChart
    Properties:
      ClusterName: !Ref EKSCluster
      Chart: keda
      Repository: https://kedacore.github.io/charts
      Namespace: keda

  # App Deployment via Helm
  AppHelm:
    Type: AWS::EKS::HelmChart
    Properties:
      ClusterName: !Ref EKSCluster
      Release: !Sub "${ApplicationName}-app"
      Chart: ./charts/php-app
      Namespace: default
      Values: |
        image:
          repository: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepoName}"
          tag: !Ref ImageTag
        env:
          DB_HOST: !GetAtt MySQLDatabase.Endpoint.Address
          DB_PORT: !GetAtt MySQLDatabase.Endpoint.Port
          DB_NAME: !Ref DBName
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPassword

Outputs:
  ClusterEndpoint:
    Value: !GetAtt EKSCluster.Endpoint
  ClusterCA:
    Value: !GetAtt EKSCluster.CertificateAuthority.Data
  LoadBalancerDNS:
    Value: !GetAtt AppHelm.Outputs.loadBalancerDNS
