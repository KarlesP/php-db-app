name: Deploy Database

on:
  workflow_dispatch:

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
      - name: Make RDS publicly accessible (temporarily)
        run: |
          aws rds modify-db-instance \
            --db-instance-identifier ${{ secrets.DB_IDENTIFIER }} \
            --publicly-accessible \
            --apply-immediately

      - name: Wait for DB to become available
        run: |
          aws rds wait db-instance-available \
            --db-instance-identifier ${{ secrets.DB_IDENTIFIER }}

      - name: Run init.sql on RDS
        env:
          DB_HOST: ${{ secrets.RDS_HOST }}
          DB_PORT: ${{ secrets.RDS_PORT }}
          DB_USER: ${{ secrets.RDS_USER }}
          DB_PASS: ${{ secrets.RDS_PASSWORD }}
        run: |
          echo "Connecting to $DB_HOST..."
          mysql -h "$DB_HOST" -P "$DB_PORT" -u "$DB_USER" -p"$DB_PASS" < ${{ github.workspace }}/docker/mysql/init.sql

      - name: Make RDS private again
        run: |
          aws rds modify-db-instance \
            --db-instance-identifier ${{ secrets.DB_IDENTIFIER }} \
            --no-publicly-accessible \
            --apply-immediately